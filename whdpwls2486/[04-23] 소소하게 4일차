9:00 ~ 10:00

경제

> 수요와 수요량

개념

1) 수요란 일정기간 동안 소비자들의 상품을 구입하려는 의사, 유량의 개념

2) 수요량이란 일정한 가격에서 소비자가 쇠하고자 하는 양이다.


> 유량과 저량

개념

1) 유량 : 기간이 표시되지 않는다면 의미가 없는 숫자, 금액 ex) 국민 소득, 월급, 연봉, 이자 -> 포괄손익계산서

2) 저량 : 기간이 중요하지 않은 숫자, 금액 ex) 자산, 부채, 자본 -> 재무상태표


> 수요의 법칙 (비싸면 안사! 저렴하면 사! 이런거야)

개념

1) 가격을 제외한 모든 것들이 일정하다는 가정 하에 가격이 상승하면 수요량은 하락, 가격이 하락하면 수요량은 증가, 역의 관계이다.

2) 이런 수요의 법칙에 예외적인 것은 기펜재와 베블렌 효과가 있다.

예외

1) 기펜재 : 가격이 오르면 수요가 증가, 가격이 내리면 수요가 감소, 기펜재는 열등재이다.

2) 베블렌 : 가격이 오를수록 과시욕 등에 의하여 수요가 증가하는 현 상 ex) 명품


변화

1) 가격이 상승하면 수요량은 감소하고, 가격이 하락하면 수요량은 감 소한다. 즉 수요량의 변화요인은 오직 가격(소득)이다.

2) 수요량의 변화는 수요곡선 상에서 이동한다.

3) 수요의 변화는 수요곡선 자체의 이동이다.

(우측이동 : 수요 감소, 좌측이동 : 수요 증가)

> 정상재와 열등재

개념

1) 정상재 : 소득이 증가 -> 수요가 증가

2) 열등재 : 소득이 증가 -> 수요가 감소

3) 중립재 : 소득이 변해도 수요의 변화가 x

> 대체재

개념

1) 어떤 상품을 대신할 수 있는 상품

2) 한 재화의 가격이 하락하면 다른 재화의 수요가 감소

ex) 햄버거 대체재는 샌드위치, 샌드위치 가격이 상승하면 소비자는 햄 버거를 소비 따라서 샌드위치(대체재)의 가격이 상승하면 햄버거(재화) 의 수요는 증가

> 보완재

개념

1) 한 재화의 가격이 하락하면 다른 재화의 수요가 증가하는 재화

ex) 치킨과 맥주를 먹을 때 맥주의 가격이 오르면 치킨의 수요도 줄 것이고, 치킨의 가격이 오르면 맥주의 수요도 줄어든다. 따라서, 보완 재의 가격이 상승하면 재화의 수요는 감소


> 소비자의 예상 (실제로 가격변화가 있는 상황은 아님!)

개념

1) 소비자가 어떤 재화의 가격이 상승한다고 예상한다면, 가격이 오르 기 전에 재화를 더 사 놓으려고 할 것이므로 수요는 증가

ex) 이 시국 마스크

2) 반대로 소비자가 재화의 가격이 하락한다고 예상하면 가격이 더 내 릴 것을 기다릴 것이기 때문에 수요는 감소


> 광고, 기호

개념

1) 소비자 기호의 변화는 수요에 영향을 미침, 광고로 인하여 기호가 변할 수 있으므로 광고의 횟수가 많아지면 수요는 증가


> 인구

개념

1) 인구의 증가는 수요의 증가를, 감소는 수요의 감소를 가져옴


> 공급의 변화 요인

개념

1) 공급 : 일정 기간동안 공급자들의 상품을 생산하려는 의사

2) 공급량의 정의 : 일정한 가격에서 생산자가 공급하고자 하는 양

3) 공급의 법칙 : 다른 모든 조건이 일정하다는 가정 하에, 가격 상승 -> 공급량 증가, 가격 하락 -> 공급량 감소, 이런 정의 관계를 의미


> 공급, 공급량의 변화

개념

1) 공급량 : 가격의 변화로 공급량이 변화하는 것을 공급의 변화, 곡선 상의 한 점에서 한 점으로의 이동 (이동 모양 수요량변화==공급량변화)

2) 공급 : 가격 이외의 변수의 변화가 모든 가격에서 공급변화를 일으 킴 마찬가지로 곡선 자체가 이동


> 공급의 변화 요인

개념

1) 생산요소가격 : 원유가격, 임금, 이자, 임대료 등이 상승하면 생산비 용이 증가하여 공급은 감소, 곡선은 좌측이동

2) 조세부담과 정부보조금 : 조세부담이 커지면 공급곡선은 좌측이동, 정부보조금이 지급되면 생산비가 감소하는 효과

3) 생산기술 : 생산기술의 발달은 비용이 감소하는 효과가 있음, 공급 곡선이 우측으로 이동한다.


10:00 ~ 11:00

실습 4-1 Mutual Exclusion


semaphore 적용 전 mutex.c


결과

- Critical Section에 대해 한 번에 하나의 thread만 허용

- 소유한 thread가 해제해줘야만 소유가 가능

- 그러므로 in 키값이 하나씩 명령이 실행되고 끝난 후에야 out 키값이 명령을 수행 가능!



​

​

실습 4-1


mutex.c void use 수정

- 키 값에 대한 임계구역을 while문을 이용하여 설정


결과

실습 4-2


- int pthread_mutex_init(pthread_mutex_t* mutex, ) Mutex 생성

- int pthread_mutex_destroy() Mutex 제거

- int pthread_mutex_lock(pthread_mutex_t* mutex) Lock 

- int pthread_mutex_unlock(pthread_mutex_t* mutex) Unlock 


결과

실습 5-1 Semaphore


키 최대 허용치 설정


key 임계구역


결과

실습 5-2


semaphore.c

- sem_t *sem_open(const char* name, int oflag, mode_t mode, int value) Named 세마포어 생성 

- sem_unlink(const char* name) Named 세마포어 제거 

- sem_close(sem_t* sem) Named 세마포어 사용 종료 

- int sem_init(sem_t* sem, int pshared, unsigned value) 세마포어 할당 

- sem_destroy(sem_t* sem) 세마포어 반환 

- int sem_wait(sem_t* sem) 세마포어 lock  

- int sem_post(sem_t* sem) 세마포어 unlock 

- Int sem_getvalue(sem_t *sem, int *sval) Sval 위치에 sem 값 세팅

- sem_wait() 카운트 값을 1씩 감소, 카운트 값이 0이 되었을 경우 대기

- sem_post() 카운트 값을 1씩 증가


실습 6 Named Semaphore

Named Semaphore 생성 (이름, flag, mode, count_value)


lock 카운트 감소


unlock 카운트 증가
