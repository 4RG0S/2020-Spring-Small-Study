9:00 ~ 10:30


운영체제 및 실습 8+9주차 이론과제를 했습니다!

이번주 이론과제 주제는 segmentation과 paging을 설명하고 비교하는 것, 가상메모리 관리 기법 중 copy on write에 대해서 서술하고 가상메모리 관리 측면에서 장점을 적는 것이었습니다. 

​

간단하게 과제를 요약해보자면 

1번

segmentation - 메모리 크기를 같은 크기의 블록으로 나누지 않고 서로 다른 크기로 나누는 가변크기 할당방식을 사용, 가변크기 방식을 사용하기 때문에 내부단편화의 위 험보다는 서로 다른 크기의 세그먼트들이 적재되고 제거되는 과정의 반복에 서 자유 공간들의 작은 조각으로 인해 외부 단편화의 발생

​

paging - 고정사이즈의 파티션으로 나누고 페이지라 불리는 이 프로세스 조각을 페이 지 프레임이라고 불리는 빈 메모리의 조각에 저장, 이 경우에 내부단편화가 발생할 가능성o, 크기가 다른 메모리를 적재시킬 경 우에 이미 고정된 사이즈로 페이지 안에 할당하게 되면 마지막 페이지의 프 레임은 전부 사용되지 않고 남아버리는 문제가 발생합니다. 이를 내부단편화라고 함

​

차이점 : 세그먼트 기법을 사용하는 데 있어 가장 불편 한 점은 프로그래머가 세그먼트 최대 크기를 알아야 한다는 것입니다. 페이징은 고정적인 사이즈를 사용하므로 알 필요 x 세그먼테이션은 가변길이 기법을 사용하므로 세그먼트의 최대 크기를 알아야함

​

2번

가상메모리 관리 시 발생할 수 있는 문제점 - resource를 같이 공유하는 다른 프로세스의 입장에서 보면 수정되기 이전 resource가 동작에 중요한 역할을 차지하는 경우 resource의 수정이 문제를 발생

​

[운영체제 동작 시 cow가 동작하는 과정을 설명]

​

결론 - 공유 상황에서 변경이 이루어져 하는 경우에 한해서 데이터를 복사하고, 복사된 데이터에 국한적으로 변경이 발생하게 함으로써 최대한 메모리를 절약할 수 있다.

​
